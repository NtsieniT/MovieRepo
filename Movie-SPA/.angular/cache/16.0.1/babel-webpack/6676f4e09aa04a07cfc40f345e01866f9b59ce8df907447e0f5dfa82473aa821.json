{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { omit } from 'lodash';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet MovieService = /*#__PURE__*/(() => {\n  class MovieService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'https://localhost:5001/api/';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      //#region FORMS INITIALIZE, POPULATE AND SET\n      this.movie = [];\n      this.movieForm = new FormGroup({\n        id: new FormControl(0),\n        name: new FormControl('', Validators.required),\n        rating: new FormControl('', Validators.required),\n        typeId: new FormControl()\n      });\n    }\n    //#endregion\n    //#region  HTTPServices\n    getMovies() {\n      return this.http.get(this.baseUrl + 'Movie/ListMovies');\n    }\n    createMovie(movie) {\n      return this.http.post(this.baseUrl + 'Movie/AddMovie', movie, this.httpOptions);\n    }\n    updateMovie(movie) {\n      return this.http.put(this.baseUrl + 'Movie/UpdateMovie', movie, this.httpOptions);\n    }\n    deleteMovie(movieId) {\n      return this.http.delete(this.baseUrl + 'Movie/DeleteMovie/' + movieId, this.httpOptions);\n    }\n    //#endregion\n    initializeForm() {\n      this.movieForm.setValue({\n        id: 0,\n        name: '',\n        rating: 0,\n        typeId: null\n      });\n    }\n    populateMovie(movie) {\n      this.movieForm.setValue(omit(movie, 'type'));\n    }\n  }\n  MovieService.ɵfac = function MovieService_Factory(t) {\n    return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  MovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MovieService,\n    factory: MovieService.ɵfac,\n    providedIn: 'root'\n  });\n  return MovieService;\n})();\nexport { MovieService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}